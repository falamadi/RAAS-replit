version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: raas_postgres_dev
    environment:
      POSTGRES_USER: raas_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: raas_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raas_user -d raas_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - raas-network

  redis:
    image: redis:7-alpine
    container_name: raas_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - raas-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: raas_elasticsearch_dev
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - network.host=0.0.0.0
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_dev_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - raas-network

  # Application Services
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: raas_backend_dev
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://raas_user:password@postgres:5432/raas_db
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - JWT_SECRET=dev_jwt_secret_key_change_in_production
      - JWT_EXPIRES_IN=7d
      - BCRYPT_ROUNDS=10
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - raas-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: raas_frontend_dev
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - raas-network
    restart: unless-stopped

  # Development Tools
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: raas_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@raas.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - raas-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: raas_redis_commander_dev
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - raas-network

  elasticsearch-head:
    image: mobz/elasticsearch-head:5
    container_name: raas_elasticsearch_head_dev
    ports:
      - "9100:9100"
    depends_on:
      - elasticsearch
    networks:
      - raas-network

  # Monitoring and Debugging
  mailhog:
    image: mailhog/mailhog:latest
    container_name: raas_mailhog_dev
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - raas-network

volumes:
  postgres_dev_data:
  redis_dev_data:
  elasticsearch_dev_data:
  pgadmin_dev_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  raas-network:
    driver: bridge